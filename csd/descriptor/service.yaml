name: NIFI
label: NiFi
description: Apache's NiFi service. <span class="error">Requires Java 8.</span>
version: 0.1.0

compatibility:
  cdhVersion:
    max: '5'
    min: 5.7.0

icon: images/icon.png

inExpressWizard: false

runAs:
  group: nifi
  principal: nifi
  user: nifi

maxInstances: 1

parcel:
  repoUrl: https://github.com/nomr/nifi-parcel/releases/download/v1.4.0+nifi0.6.1
  requiredTags: [nifi]

serviceDependencies:
- name: ZOOKEEPER
  required: 'true'
- name: NIFI_TLS
  required: 'true'

commands:
- name: server_test_zookeeper
  label: Test Zookeeper Connection
  description: Tests if the node can work with Zookeeper
  roleCommand: server_test_zookeeper
  roleName: NIFI_SERVER
  runMode: all
- name: server_deploy_authorizations
  label: Deploy Default Authorizations
  description: Create a backup of any existing authorizations.xml file and
    replaces it with the default cloudera-managed model.
  roleCommand: node_deploy_authorizations
  roleName: NIFI_SERVER
  runMode: "all"
- name: server_remove_state
  label: Remove Local State and Repositories
  description: Deletes authorizations.xml, users.xml and flow.xml.gz files
  roleCommand: server_remove_state
  roleName: NIFI_SERVER
  runMode: "all"
- name: server_remove_zookeeper
  label: Remove Global State
  description: Deletes Zookeeper root node
  roleCommand: server_remove_zookeeper
  roleName: NIFI_SERVER
  runMode: "single"

serviceInit:
  preStartSteps:
    - commandName: server_deploy_authorizations

rollingRestart:
  workerSteps:
    roleName: NIFI_SERVER
    bringDownCommands:
    - Stop
    bringUpCommands:
    - Start

rolesWithExternalLinks:
- NIFI_SERVER

kerberos: true

parameters:
- name: java_home
  configName: java.home
  label: Java 8 Home
  description: Path to Java 8
  required: true
  configurableInWizard: true
  type: path
  pathType: serviceSpecific
  default: /usr/java/jdk1.8.0_121

roles:
- name: NIFI_SERVER
  label: Node
  pluralLabel: Nodes
  jvmBased: true

  externalLink:
    name: webserver_web_ui
    label: NiFi UI
    url: 'http://${host}:${nifi_web_http_port}/nifi'
    secureUrl: 'https://${host}:${nifi_web_http_port}/nifi'

  startRunner:
    program: scripts/control.sh
    args: [nifi-start]
    environmentVariables: &environment_variables
      JAVA_HOME: '${java_home}'
      NIFI_HOME: '${nifi_home}'
      NIFI_JAVA_OPTS: '-Xmx${java_heap_size}m -Xms${java_heap_size}m -X${java_non_standard_options} -D${java_properties} -Dapp=NiFi'
      NIFI_LOG_DIR: /var/log/nifi
      NIFI_PID_DIR: '${nifi_home}'
      NIFI_SEED: '${nifi_sensitive_props_key}'
      NIFI_CMF_ADMINS: '${cmf_admins}'

#  stopRunner:
#    program: scripts/control.sh
#    args: [nifi-stop]
#    environmentVariables:
#      JAVA_HOME: '${java_home}'
#      NIFI_HOME: '${nifi_home}'
#      NIFI_JAVA_OPTS: '-D${java_properties}'
#      NIFI_LOG_DIR: /var/log/nifi
#      NIFI_PID_DIR: '${nifi_home}'

  commands:
  - name: server_test_zookeeper
    label: Test Zookeeper Connection
    description: Tests if the node can work with Zookeeper
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      program: scripts/control.sh
      args: [nifi-reset, zk-canary]
      environmentVariables: *environment_variables

  - name: node_deploy_authorizations
    label: Deploy Default Authorizations
    description: Create a backup of any existing authorizations.xml file and
      replaces it with the default cloudera-managed model.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environment_variables
      program: scripts/authorizations.sh
      args:
      - deploy
      - ${nifi_home}/authorizations.xml
  - name: server_remove_state
    label: Reset NiFi State Files and Repositories
    description: Removes NiFi state on stopped nodes.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      program: scripts/control.sh
      args: [nifi-reset, state]
      environmentVariables: *environment_variables
  - name: server_remove_zookeeper
    label: Remove Global State
    description: Deletes Zookeeper root node
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      program: scripts/control.sh
      args: [nifi-reset, zookeeper]
      environmentVariables: *environment_variables

  topology:
    minInstances: 0
    softMinInstances: 3

  kerberosPrincipals:
  - name: nifi_principal
    primary: ${principal}
    instance: ${host}
  - name: nifi_spnego_principal
    primary: HTTP
    instance: ${host}
  - name: nifi_admin_principal
    primary: ${principal}
    instance: nifi-admin

  logging:
    dir: /var/log/nifi
    filename: nifi.log
    loggingType: logback
    modifiable: true
    additionalConfigs:
    - {key: '1', value: <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"><resetJUL>true</resetJUL></contextListener>}
    - {key: '1', value: <logger name="org.apache.nifi" level="INFO"/>}
    - {key: '1', value: <logger name="org.apache.nifi.processors" level="WARN"/>}
    - {key: '1', value: <logger name="org.apache.nifi.processors.standard.LogAttribute"
        level="INFO"/>}
    - {key: '1', value: <logger name="org.apache.nifi.processors.standard.LogMessage"
        level="INFO"/>}
    - {key: '1', value: <logger name="org.apache.nifi.controller.repository.StandardProcessSession"
        level="WARN" />}
    - {key: '1', value: <logger name="org.apache.zookeeper.ClientCnxn" level="ERROR"
        />}
    - {key: '1', value: <logger name="org.apache.zookeeper.server.NIOServerCnxn" level="ERROR"
        />}
    - {key: '1', value: <logger name="org.apache.zookeeper.server.NIOServerCnxnFactory"
        level="ERROR" />}
    - {key: '1', value: <logger name="org.apache.zookeeper.server.quorum" level="ERROR"
        />}
    - {key: '1', value: <logger name="org.apache.zookeeper.ZooKeeper" level="ERROR"
        />}
    - {key: '1', value: <logger name="org.apache.zookeeper.server.PrepRequestProcessor"
        level="ERROR" />}
    - {key: '1', value: <logger name="org.apache.calcite.runtime.CalciteException"
        level="OFF" />}
    - {key: '1', value: <logger name="org.apache.curator.framework.recipes.leader.LeaderSelector"
        level="OFF" />}
    - {key: '1', value: <logger name="org.apache.curator.ConnectionState" level="OFF"
        />}
    - {key: '1', value: <logger name="org.apache.nifi.cluster" level="INFO"/>}
    - {key: '1', value: <logger name="org.apache.nifi.server.JettyServer" level="INFO"/>}
    - {key: '1', value: <logger name="org.eclipse.jetty" level="INFO"/>}
    - {key: '1', value: <logger name="com.sun.jersey.spi.container.servlet.WebComponent"
        level="ERROR"/>}
    - {key: '1', value: <logger name="com.sun.jersey.spi.spring" level="ERROR"/>}
    - {key: '1', value: <logger name="org.springframework" level="ERROR"/>}
    - {key: '1', value: <logger name="com.sun.jersey.spi.inject.Errors" level="ERROR"/>}
    - {key: '1', value: <logger name="org.apache.nifi.web.security" level="INFO" additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.web.api.config" level="INFO"
        additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.authorization" level="INFO"
        additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.cluster.authorization" level="INFO"
        additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.web.filter.RequestLogger" level="INFO"
        additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.bootstrap" level="INFO" additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.bootstrap.Command" level="INFO"
        additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.StdOut" level="INFO" additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.StdErr" level="ERROR" additivity="false"/>}

    - {key: '1', value: <logger name="org.apache.nifi.controller.cluster.ClusterProtocolHeartbeater"
        level="WARN" additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.cluster.protocol.impl.SocketProtocolListener"
        level="WARN" additivity="false"/>}
    - {key: '1', value: <logger name="org.apache.nifi.cluster.coordination.heartbeat.AbstractHeartbeatMonitor"
        level="WARN" additivity="false"/>}


  parameters:
  - name: nifi_home
    configName: nifi.home
    label: NiFi Home directory
    description: NiFi's service instance home directory
    required: true
    configurableInWizard: true
    type: path
    pathType: localDataDir
    mode: '0750'
    default: /data/nifi/home

  - name: cmf_admins
    configName: cmf_admins
    label: NiFi Administrator Identities
    description: Identities that will be granted Admin access to NiFi.
    required: true
    configurableInWizard: true
    type: string_array
    separator: '^'
    minLength: 1

  - name: authorizers_access_policy_file_user_group_provider
    label: Authorizers File Access Policy Provider User Group Provider
    configName: User Group Provider
    description: The
      identifier for an User Group Provider defined above that will be used to access
      users and groups for use in the managed access policies.
    required: true
    type: string_enum
    validValues: [composite-configurable, cloudera]
    default: composite-configurable

  - name: authorizers_authorizer_managed_access_policy_provider
    configName: Access Policy Provider
    label: Authorizers Managed Authorizer Access Policy Provider
    description: The identifier for an Access Policy Provider.
    required: true
    type: string_enum
    validValues: [file-access-policy-provider]
    default: file-access-policy-provider

  - {default: '12', description: 'The duration of how long the user authentication
      is valid for. If the user never logs out, they will be required to log back
      in following this duration.', label: Login Kerberos Identity Provider Authentication
      Expiration, min: 1, name: login_identity_providers_kerberos_authentication_expiration,
    required: false, type: long, unit: hours}
  - {configName: nifi.flow.configuration.archive.enabled, default: 'true', description: Specifies
      whether NiFi creates a backup copy of the flow automatically when the flow is
      updated., label: Flow Configuration Archive (on/off), name: nifi_flow_configuration_archive_enabled,
    required: true, type: boolean}
  - {default: 720, description: The lifespan of archived flow.xml files. NiFi will
      delete expired archive files when it updates flow.xml if this property is specified.
      Expiration is determined based on current system time and the last modified
      timestamp of an archived flow.xml., label: Flow Configuration Archive (Max Time),
    min: 1, name: nifi_flow_configuration_archive_max_time, required: true, type: long,
    unit: hours}
  - {default: 500, description: 'The total data size allowed for the archived flow.xml
      files. NiFi will delete the oldest archive files until the total archived file
      size becomes less than this configuration value, if this property is specified. ',
    label: Flow Configuration Archive (Max Storage), min: 1, name: nifi_flow_configuration_archive_max_storage,
    required: true, type: long, unit: megabytes}
  - {configname: nifi.flow.configuration.archive.max.time, description: 'The number
      of archive files allowed. NiFi will delete the oldest archive files so that
      only N latest archives can be kept, if this property is specified.', label: Flow
      Configuration Archive (Max Count), min: 1, name: nifi_flow_configuration_archive_max_count,
    required: false, type: long}
  - {default: 10, description: Indicates the shutdown period., label: Flow Controller
      Graceful Shutdown Period, min: 1, name: nifi_flowcontroller_graceful_shutdown_period,
    required: true, type: long, unit: seconds}
  - {configName: nifi.flowcontroller.autoResumeState, default: 'true', description: Indicates
      whether -upon restart- the components on the NiFi graph should return to their
      last state., label: Flow Controller Auto Resume State (on/off), name: nifi_flowcontroller_auto_resume_state,
    required: true, type: boolean}
  - {default: 500, description: 'When many changes are made to the flow.xml, this
      property specifies how long to wait before writing out the changes, so as to
      batch the changes into a single write.', label: Flow Service Write Delay Interval,
    min: 1, name: nifi_flowservice_writedelay_interval, required: true, type: long,
    unit: milliseconds}
  - {default: 30, description: 'If a component allows an unexpected exception to escape,
      it is considered a bug. As a result, the framework will pause (or administratively
      yield) the component for this amount of time. This is done so that the component
      does not use up massive amounts of system resources, since it is known to have
      problems in the existing state.', label: Administrative Yield Duration, min: 1,
    name: nifi_administrative_yield_duration, required: true, type: long, unit: seconds}
  - {default: 10, description: 'When a component has no work to do (i.e., is "bored"),
      this is the amount of time it will wait before checking to see if it has new
      data to work on. This way, it does not use up CPU resources by checking for
      new work too often. When setting this property, be aware that it could add extra
      latency for components that do not constantly have work to do, as once they
      go into this "bored" state, they will wait this amount of time before checking
      for more work.', label: Bored Yield Duration, min: 1, name: nifi_bored_yield_duration,
    required: true, type: long, unit: milliseconds}
  - {configName: nifi.ui.banner.text, description: This is banner text that may be
      configured to display at the top of the User Interface., label: UI Banner Text,
    name: nifi_ui_banner_text, required: false, type: string}
  - {default: 30, description: The interval at which the User Interface auto-refreshes.,
    label: UI Autorefresh Interval, min: 1, name: nifi_ui_autorefresh_interval, required: true,
    type: long, unit: seconds}
  - name: nifi_nar_library_directory
    configName: nifi.nar.library.directory.colon_array
    label: Additional NAR library directories
    description: Additional directories with custom NAR files.
    required: false
    type: path_array
    pathType: serviceSpecific
    conformRegex: /.*
    separator: ':'

  - name: nifi_database_directory
    configName: nifi.database.directory
    label: H2 Database Directory
    description: The path to the database directory
    required: true
    configurableInWizard: true
    type: path
    pathType: localDataDir
    conformRegex: /.*
    mode: '0750'
    default: /data/nifi/database
  - name: nifi_database_h2_url_append
    configName: nifi.h2.url.append
    label: H2 Connect String Options
    description: Options to append to H2's connect string
    required: true
    type: string_array
    separator: ';'
    default:
    - LOCK_TIMEOUT=25000
    - WRITE_DELAY=0
    - AUTO_SERVER=FALSE

  - name: nifi_security_user_authorizer
    configName: nifi.security.user.authorizer
    label: Security User Authorizer
    description: The identififer of the desired authorizer in authorizers.xml (or safety valve).
    required: true
    type: string_enum
    validValues: ['managed-authorizer']
    default: managed-authorizer

  - configName: nifi.security.user.login.identity.provider
    description: The identififer of the desired Login Identity Provider in login-identity-provider.xml
      (or safety valve).
    label: Security User Login Identity Provider
    name: nifi_security_user_login_identity_provider
    required: false
    type: string_enum
    validValues: ['', kerberos-provider]
    default: ''

  - name: nifi_flowfile_repository_implementation
    configName: nifi.flowfile.repository.implementation
    label: FlowFile Repository Implementation
    description: 'The FlowFile Repository implementation. The default value is org.apache.nifi.controller.repository.WriteAheadFlowFileRepository
      and should only be changed with caution. To store flowfiles in memory instead
      of on disk (at the risk of data loss in the event of power/machine failure),
      set this property to org.apache.nifi.controller.repository.VolatileFlowFileRepository.'
    required: true
    type: string_enum
    validValues:
    - org.apache.nifi.controller.repository.WriteAheadFlowFileRepository
    - org.apache.nifi.controller.repository.VolatileFlowFileRepository
    default: org.apache.nifi.controller.repository.WriteAheadFlowFileRepository
  - name: nifi_flowfile_repository_directory
    configName: nifi.flowfile.repository.directory
    label: FlowFile Respository Directory
    description: The location of the FlowFile Repository.
    required: true
    configurableInWizard: true
    type: path
    pathType: localDataDir
    mode: '0750'
    conformRegex: /.*
    default: /data/nifi/flowfile
  - {configName: nifi.flowfile.repository.partitions, default: 256, description: The
      number of partitions, label: FlowFile Respository Number of Partitions, min: 1,
    name: nifi_flowfile_repository_partitions, type: long}
  - {default: 2, description: The FlowFile Repository checkpoint interval., label: FlowFile
      Repository Checkpoint Interval, min: 1, name: nifi_flowfile_repository_checkpoint_interval,
    type: long, unit: minutes}
  - {configName: nifi.flowfile.repository.always.sync, default: 'false', description: 'If
      set to true, any change to the repository will be synchronized to the disk,
      meaning that NiFi will ask the operating system not to cache the information.
      This is very expensive and can significantly reduce NiFi performance. However,
      if it is false, there could be the potential for data loss if either there is
      a sudden power loss or the operating system crashes.', label: FlowFile Repository
      Always Sync, name: nifi_flowfile_repository_always_sync, type: boolean}
  - {configName: nifi.queue.swap.threshold, default: 20000, description: The queue
      threshold at which NiFi starts to swap FlowFile information to disk., label: Queue
      Swap Threshold, min: 1, name: nifi_swap_queue_threshold, type: long}
  - {default: 5, description: The swap in period., label: Swap in period, min: 1,
    name: nifi_swap_in_period, type: long, unit: seconds}
  - {configName: nifi.swap.in.threads, default: 1, description: The number of threads
      to use for swapping in, label: Swap in threads, min: 1, name: nifi_swap_in_threads,
    type: long}
  - {default: 5, description: The swap out period., label: Swap out period, min: 1,
    name: nifi_swap_out_period, type: long, unit: seconds}
  - {configName: nifi.swap.out.threads, default: 4, description: The number of threads
      to use for swapping out, label: Swap out threads, min: 1, name: nifi_swap_out_threads,
    type: long}

  - name: nifi_content_repository_implementation
    configName: nifi.content.repository.implementation
    label: Content Repository Implementation
    description: 'The Content Repository implementation. The default value should
      only be changed with caution. To store flowfile content in memory instead of
      on disk (at the risk of data loss in the event of power/machine failure), set
      this property to org.apache.nifi.controller.repository.VolatileContentRepository.'
    required: true
    type: string_enum
    validValues:
    - org.apache.nifi.controller.repository.FileSystemRepository
    - org.apache.nifi.controller.repository.VolatileContentRepository
    default: org.apache.nifi.controller.repository.FileSystemRepository
  - {default: 10, description: The maximum size for a content claim., label: Content
      Repository Maximum content claim size, min: 1, name: nifi_content_claim_max_appendable_size,
    required: true, type: long, units: megabytes}
  - {configName: nifi.content.claim.max.flow.files, default: 100, description: The
      maximum number of FlowFiles to assign to one content claim., label: Content
      Repository Maximum FlowFiles per Content Claim, min: 1, name: nifi_content_claim_max_flow_files,
    required: true, type: long}
  - name: nifi_content_repository_directory
    configName: nifi.content.repository.directory.colon_array
    label: Content Repository Default Directory
    description: The location(s) of the Content Repository.
    required: true
    configurableInWizard: true
    type: path_array
    pathType: localDataDir
    conformRegex: /.*
    mode: '0750'
    separator: ':'
    minLength: 1
    default:
    - /data/nifi/content
  - {configName: nifi.content.repository.archive.max.retention.period, default: 12,
    description: 'If archiving is enabled, then this property specifies the maximum
      amount of time to keep the archived data.', label: Content Repository Archive
      Max Retention Period, min: 1, name: nifi_content_repository_archive_max_retention_period,
    required: true, type: long, units: hours}
  - {configName: nifi.content.repository.archive.max.usage.percentage, default: 50,
    description: 'If archiving is enabled (see nifi.content.repository.archive.enabled
      below), then this property must have a value that indicates the content repository
      disk usage percentage at which archived data begins to be removed. If the archive
      is empty and content repository disk usage is above this percentage, then archiving
      is temporarily disabled. Archiving will resume when disk usage is below this
      percentage.', label: Content Repository Archive Max Usage Percentage, max: 99,
    min: 1, name: nifi_content_repository_archive_max_usage_percentage, required: true,
    type: long}
  - {configName: nifi.content.repository.archive.enabled, default: true, description: 'To
      enable content archiving, set this to true and specify a value for the nifi.content.repository.archive.max.usage.percentage
      property above. Content archiving enables the provenance UI to view or replay
      content that is no longer in a dataflow queue.', label: Content Repository Archive
      Enabled, name: nifi_content_repository_archive_enabled, required: true, type: boolean}
  - {configName: nifi.content.repository.always.sync, default: false, description: 'If
      set to true, any change to the repository will be synchronized to the disk,
      meaning that NiFi will ask the operating system not to cache the information.
      This is very expensive and can significantly reduce NiFi performance. However,
      if it is false, there could be the potential for data loss if either there is
      a sudden power loss or the operating system crashes.', label: Content Repository
      Always Sync, name: nifi_content_repository_always_sync, required: true, type: boolean}
  - {configName: nifi.content.viewer.url, default: /nifi-content-viewer/, description: The
      URL for a web-based content viewer if one is available., label: Content Repository
      Viewer URL, name: nifi_content_viewer_url, required: true, type: string}

  - name: nifi_provenance_repository_implementation
    configName: nifi.provenance.repository.implementation
    label: Provenance Repository Implementation
    description: The Provenance Repository implementation.
    required: true
    type: string_enum
    validValues: [org.apache.nifi.provenance.WriteAheadProvenanceRepository]
    default: org.apache.nifi.provenance.WriteAheadProvenanceRepository
  - name: nifi_provenance_repository_directory
    configName: nifi.provenance.repository.directory.colon_array
    label: Provenance Repository Default Directory
    description: The location of the Provenance Repository.
    required: true
    configurableInWizard: true
    type: path_array
    pathType: localDataDir
    conformRegex: /.*
    mode: '0750'
    separator: ':'
    minLength: 1
    default:
    - /data/nifi/provenance
  - {configName: nifi.provenance.repository.max.storage.time, default: 24, description: The
      maximum amount of time to keep data provenance information., label: Provenance
      Repository Max Storage Time, min: 1, name: nifi_provenance_repository_max_storage_time,
    required: true, type: long, unit: hours}
  - {configName: nifi.provenance.repository.max.storage.size, default: 1, description: 'The
      maximum amount of data provenance information to store at a time. The default
      value is 1 GB. The Data Provenance capability can consume a great deal of storage
      space because so much data is kept. For production environments, values of 1-2
      TB or more is not uncommon. The repository will write to a single ''event file''
      (or set of ''event files'' if multiple storage locations are defined, as described
      above) for some period of time (defined by the nifi.provenance.repository.rollover.time
      and nifi.provenance.repository.rollover.size properties). Data is always aged
      off one file at a time, so it is not advisable to write to a single ''event
      file'' for a tremendous amount of time, as it will prevent old data from aging
      off as smoothly.', label: Provenance Repository Max Storage Size, min: 1, name: nifi_provenance_repository_max_storage_size,
    required: true, type: long, unit: gigabytes}
  - {configName: nifi.provenance.repository.rollover.time, default: 30, description: The
      amount of time to wait before rolling over the 'event file' that the repository
      is writing to., label: Provenance Repository Rollover Time, min: 1, name: nifi_provenance_repository_rollover_time,
    required: true, type: long, unit: seconds}
  - {configName: nifi.provenance.repository.rollover.size, default: 100, description: 'The
      amount of data to write to a single ''event file.'' The default value is 100
      MB. For production environments where a very large amount of Data Provenance
      is generated, a value of 1 GB is also very reasonable.  ', label: Provenance
      Repository Rollover Size, min: 1, name: nifi_provenance_repository_rollover_size,
    required: true, type: long, unit: megabytes}
  - {configName: nifi.provenance.repository.query.threads, default: 2, description: The
      number of threads to use for Provenance Repository queries., label: Provenance
      Repository Number of Query Threads, min: 1, name: nifi_provenance_repository_query_threads,
    required: true, type: long}
  - {configName: nifi.provenance.repository.index.threads, default: 2, description: 'The
      number of threads to use for indexing Provenance events so that they are searchable.
      The default value is 2. For flows that operate on a very high number of FlowFiles,
      the indexing of Provenance events could become a bottleneck. If this happens,
      increasing the value of this property may increase the rate at which the Provenance
      Repository is able to process these records, resulting in better overall throughput.
      It is advisable to use at least 1 thread per storage location (i.e., if there
      are 3 storage locations, at least 3 threads should be used). For high throughput
      environments, where more CPU and disk I/O is available, it may make sense to
      increase this value significantly. Typically going beyond 2-4 threads per storage
      location is not valuable. However, this can be tuned depending on the CPU resources
      available compared to the I/O resources.', label: Provenance Repository Number
      of Index Threads, min: 1, name: nifi_provenance_repository_index_threads, required: true,
    type: long}
  - {configName: nifi.provenance.repository.compress.on.rollover, default: true, description: 'Indicates
      whether to compress the provenance information when an ''event file'' is rolled
      over. ', label: Provenance Repository Compress Files on Rollover, name: nifi_provenance_repository_compress_on_rollover,
    required: true, type: boolean}
  - {configName: nifi.provenance.repository.always.sync, default: false, description: 'If
      set to true, any change to the repository will be synchronized to the disk,
      meaning that NiFi will ask the operating system not to cache the information.
      This is very expensive and can significantly reduce NiFi performance. However,
      if it is false, there could be the potential for data loss if either there is
      a sudden power loss or the operating system crashes.', label: Provenance Repository
      Always Sync, name: nifi_provenance_repository_always_sync, required: true, type: boolean}
  - {configName: nifi.provenance.repository.journal.count, description: 'The number
      of journal files that should be used to serialize Provenance Event data. Increasing
      this value will allow more tasks to simultaneously update the repository but
      will result in more expensive merging of the journal files later. This value
      should ideally be equal to the number of threads that are expected to update
      the repository simultaneously, but 16 tends to work well in must environments.',
    label: Provenance Repository (Persistent) Journal Count, min: 1, name: nifi_provenance_repository_journal_count,
    required: false, type: long}
  - name: nifi_provenance_repository_indexed_fields
    configName: nifi.provenance.repository.indexed.fields
    label: Provenance Repository Indexed Fields
    description: 'List of the fields that should be indexed and made searchable. Fields that are
      not indexed will not be searchable. Valid fields are: EventType, FlowFileUUID,
      Filename, TransitURI, ProcessorID, AlternateIdentifierURI, Relationship, Details.'
    required: true
    type: string_array
    separator: ','
    default:
    - EventType
    - FlowFileUUID
    - Filename
    - ProcessorID
    - Relationship
  - name: nifi_provenance_repository_indexed_attributes
    configName: nifi.provenance.repository.indexed.attributes
    label: Provenance Repository Indexed Attributes
    description: 'List of FlowFile Attributes that should be indexed and
      made searchable. Some good examples to consider are filename and mime.type as
      well as any custom attributes you might use which are valuable for your use case.'
    required: false
    type: string_array
    separator: ','
  - {configName: nifi.provenance.repository.index.shard.size, default: 500, description: 'The
      repository uses Apache Lucene to performing indexing and searching capabilities.
      This value indicates how large a Lucene Index should become before the Repository
      starts writing to a new Index. Large values for the shard size will result in
      more Java heap usage when searching the Provenance Repository but should provide
      better performance. The default value is 500 MB. However, this is due to the
      fact that defaults are tuned for very small environments where most users begin
      to use NiFi. For production environments, it is advisable to change this value
      to 4 to 8 GB. Once all Provenance Events in the index have been aged off from
      the ''event files,'' the index will be destroyed as well.', label: Provenance
      Repository Index Shard Size, min: 1, name: nifi_provenance_repository_index_shard_size,
    required: true, type: long, unit: megabytes}
  - {configName: nifi.provenance.repository.max.attribute.length, default: 65536,
    description: 'Indicates the maximum length that a FlowFile attribute can be when
      retrieving a Provenance Event from the repository. If the length of any attribute
      exceeds this value, it will be truncated when the event is retrieved.', label: Provenance
      Repository Max Attribute Length, min: 1, name: nifi_provenance_repository_max_attribute_length,
    required: true, type: long}
  - {configName: nifi.provenance.repository.concurrent.merge.threads, default: 1,
    description: 'Apache Lucene creates several ''segments'' in an Index. These segments
      are periodically merged together in order to provide faster querying. This property
      specifies the maximum number of threads that are allowed to be used for each
      of the storage directories. The default value is 2. For high throughput environments,
      it is advisable to set the number of index threads larger than the number of
      merge threads * the number of storage locations. For example, if there are 2
      storage locations and the number of index threads is set to 8, then the number
      of merge threads should likely be less than 4. While it is not critical that
      this be done, setting the number of merge threads larger than this can result
      in all index threads being used to merge, which would cause the NiFi flow to
      periodically pause while indexing is happening, resulting in some data being
      processed with much higher latency than other data.', label: Provenance Repository
      Number of Concurrent Merge Threads, min: 1, name: nifi_provenance_repository_concurrent_merge_threads,
    required: true, type: long}
  - {configName: nifi.provenance.repository.warm.cache.frequency, default: 4, description: "Each\
      \ time that a Provenance query is run, the query must first search the Apache\
      \ Lucene indices (at least, in most cases - there are some queries that are\
      \ run often and the results are cached to avoid searching the Lucene indices).\
      \ When a Lucene index is opened for the first time, it can be very expensive\
      \ and take several seconds. This is compounded by having many different indices,\
      \ and can result in a Provenance query taking much longer. After the index has\
      \ been opened, the Operating System\u2019s disk cache will typically hold onto\
      \ enough data to make re-opening the index much faster - at least for a period\
      \ of time, until the disk cache evicts this data. If this value is set, NiFi\
      \ will periodically open each Lucene index and then close it, in order to 'warm'\
      \ the cache. This will result in far faster queries when the Provenance Repository\
      \ is large. As with all great things, though, it comes with a cost. Warming\
      \ the cache does take some CPU resources, but more importantly it will evict\
      \ other data from the Operating System disk cache and will result in reading\
      \ (potentially a great deal of) data from the disk. This can result in lower\
      \ NiFi performance. However, if NiFi is running in an environment where CPU\
      \ and disk are not fully utilized, this feature can result in far faster Provenance\
      \ queries.", label: Provenance Repository Warm Up Cache Frequency, min: 1, name: nifi_provenance_repository_warm_cache_frequency,
    required: true, type: long, unit: hours}
  - {configName: nifi.provenance.repository.buffer.size, default: 100000, description: The
      Provenance Repository buffer size., label: Provenance Repository Volatile Buffer
      Size, min: 1, name: nifi_provenance_repository_buffer_size, required: true,
    type: long}
  - {configName: nifi.components.status.repository.buffer.size, default: 1440, description: Specifies
      the buffer size for the Component Status Repository., label: Components Status
      Repository Buffer Size, min: 1, name: nifi_components_status_repository_buffer_size,
    type: long}
  - {default: 1, description: This value indicates how often to present a snapshot
      of the components' status history., label: Components Status Respository Snapshot
      Frequency, min: 1, name: nifi_components_status_snapshot_frequency, type: long,
    unit: minutes}

  - name: nifi_remote_input_socket_port
    configName: nifi.remote.input.socket.port
    label: Site-to-Site Port Number
    description: 'The remote
      input socket port for Site-to-Site communication. By default, it is blank, but
      it must have a value in order to use RAW socket as transport protocol for Site-to-Site.'
    min: 1024
    required: false
    type: port
    default: 8022
  - {configName: nifi.remote.input.http.enabled, default: true, description: Specifies
      whether HTTP(or HTTPS) Site-to-Site should be enabled on this host., label: Site-to-Site
      HTTP/S Enabled, name: nifi_remote_input_http_enabled, required: true, type: boolean}
  - {default: 30, description: "Specifies how long a transaction can stay alive on\
      \ the server. By default, it is set to 30 secs. If a Site-to-Site client hasn\u2019\
      t proceeded to the next action after this period of time, the transaction is\
      \ discarded from the remote NiFi instance. For example, when a client creates\
      \ a transaction but doesn\u2019t send or receive flow files, or when a client\
      \ sends or receives flow files but doesn\u2019t confirm that transaction.",
    label: Site-to-Site HTTP Transaction TTL, min: 1, name: nifi_remote_input_http_transaction_ttl,
    required: true, type: long, unit: seconds}

  - name: nifi_web_http_port
    configName: nifi.web.http.port
    description: The HTTP(or HTTPS) port
    label: HTTP(or HTTPS) port
    required: false
    type: port
    min: 1024
    default: 9090
  - name: nifi_web_http_port_forwarding
    configName: nifi.web.http.port.forwarding
    label: HTTP(or HTTPS) Forwarded port
    description: 'The port which forwards
      incoming HTTP requests to nifi.web.http.host. This property is designed to be
      used with port forwarding, when NiFi has to be started by a non-root user for
      better security, yet it needs to be accessed via low port to go through a firewall.
      For example, to expose NiFi via HTTP protocol on port 80, but actually listening
      on port 8080, you need to configure OS level port forwarding such as iptables
      (Linux/Unix) or pfctl (OS X) that redirects requests from 80 to 8080. Then set
      nifi.web.http.port as 8080, and nifi.web.http.port.forwarding as 80. It is blank
      by default.'
    required: false
    type: port
    min: 1
  - name: nifi_web_http_network_interface
    configName: nifi.web.http.network.interface.colon_array
    description: 'The name of the network interface(s) to which NiFi should bind for
      HTTP(or HTTPs) requests.'
    label: HTTP(or HTTPs) Default Network Interface
    required: false
    type: string_array
    separator: ':'
    minLength: 0

  - {configName: nifi.web.jetty.threads, default: 200, description: The number of
      Jetty threads., label: HTTP(S) Number of Threads, min: 1, name: nifi_web_jetty_threads,
    required: true, type: long}

  - name: nifi_sensitive_props_key
    configName: nifi.sensitive.props.key
    label: Security Sensitive Prop Key
    description: 'This is the password used
      to encrypt any sensitive property values that are configured in processors.
      By default, it is blank, but the system administrator should provide a value
      for it. It can be a string of any length, although the recommended minimum length
      is 10 characters. Be aware that once this password is set and one or more sensitive
      processor properties have been configured, this password should not be changed.'
    required: true
    configurableInWizard: true
    sensitive: true
    type: password
    default: KY2ncTD7dTJzzMsUSBamefaG

  - name: nifi_cluster_protocol_heartbeat_interval
    configName: nifi.cluster.protocol.heartbeat.interval
    label: Cluster Protocol Heartbeat Interval
    description: The interval at which nodes should emit heartbeats to
      the Cluster Coordinator. The default value is 5 sec.
    type: long
    unit: seconds
    softMin: 1
    default: 5

  - name: nifi_cluster_node_protocol_port
    configName: nifi.cluster.node.protocol.port
    label: Cluster Node Protocol Port
    description: 'The node’s protocol port.'
    required: false
    type: port
    min: 1024
    default: 8021
  - name: nifi_cluster_node_protocol_threads
    configName: nifi.cluster.node.protocol.threads
    label: Cluster Node Protocol Threads
    description: 'The number of threads that should be used to communicate with other
      nodes in the cluster. This property defaults to 10, but for large clusters, this
      value may need to be larger.'
    type: long
    min: 1
    softMin: 10
    default: 10
  - name: nifi_cluster_node_protocol_max_threads
    configName: nifi.cluster.node.protocol.max.threads
    label: Cluster Node Protocol Max Threads
    description: 'The maximum number of threads that should be used to communicate
      with other nodes in the cluster.'
    type: long
    min: 1
    softMin: 50
    default: 50
  - name: nifi_cluster_node_event_history_size
    configName: nifi.cluster.node.event.history.size
    label: Cluster Node Event History Size
    description: 'When the state of a node in the cluster is changed, an event is generated
      and can be viewed in the Cluster page. This value indicates how many events to keep
      in memory for each node.'
    type: long
    min: 1
    softMin: 25
    default: 25
  - name: nifi_cluster_node_connection_timeout
    configName: nifi.cluster.node.connection.timeout
    label: Cluster Node Connection Timeout
    description: 'When connecting to another node in the cluster, specifies how long this
      node should wait before considering the connection a failure.'
    required: true
    type: long
    unit: seconds
    min: 1
    softMin: 5
    default: 5
  - name: nifi_cluster_node_read_timeout
    configName: nifi.cluster.node.read.timeout
    label: Cluster Node Read Timeout
    description: 'When communicating with another node in the cluster, specifies how long
      this node should wait to receive information from the remote node before considering
      the communication with the node a failure.'
    required: true
    type: long
    unit: seconds
    min: 1
    softMin: 5
    default: 5
  - name: nifi_cluster_node_max_concurrent_requests
    configName: nifi.cluster.node.max.concurrent.requests
    label: Cluster Node Max Concurrent Requests
    description: 'Maximum number of concurrent requests when communicating with other nodes'
    required: true
    type: long
    min: 1
    softMin: 100
    default: 100
  - name: nifi_cluster_flow_election_max_wait_time
    configName: nifi.cluster.flow.election.max.wait.time
    label: Cluster Flow Election Max Wait Time
    description: 'Specifies the amount of time to wait before electing a Flow as the
      "correct" Flow. If the number of Nodes that have voted is equal to the number specified
      by the nifi.cluster.flow.election.max.candidates property, the cluster will not wait
      this long. Note that the time starts as soon as the first vote is cast.'
    required: true
    type: long
    unit: seconds
    min: 1
    default: 300

  - name: nifi_zookeeper_connect_timeout
    configName: nifi.zookeeper.connect.timeout
    label: Zookeeper Connect Timeout
    description: 'How long to wait when connecting to ZooKeeper before considering the connection
      a failure.'
    required: true
    type: long
    unit: seconds
    min: 1
    softMin: 3
    default: 3
  - name: nifi_zookeeper_session_timeout
    configName: nifi.zookeeper.session.timeout
    label: Zookeeper Session Timeout
    description: 'How long to wait after losing a connection to ZooKeeper before the session
      is expired.'
    required: true
    type: long
    unit: seconds
    min: 1
    softMin: 3
    default: 3
  - name: nifi_zookeeper_auth_type
    configName: nifi.zookeeper.auth.type
    label: Zookeeper Authentication Type
    description: Zookeeper Authentication Type
    required: true
    type: string_enum
    validValues: [default, sasl]
    default: default

  - name: state_management_zk_provider_access_control
    label: State Management Zookeeper Provider Access Control
    configName: Access Control
    description: 'Specifies which Access Controls will be applied to the ZooKeeper
      ZNodes that are created by this State Provider. This value must be set to one
      of: - Open  : ZNodes will be open to any ZooKeeper client.  - CreatorOnly  :
      ZNodes will be accessible only by the creator. The creator will have full access
      to create children, read, write, delete, and administer the ZNodes.  This option
      is available only if access to ZooKeeper is secured via Kerberos or if a Username
      and Password are set.'
    required: true
    type: string_enum
    validValues: [Open, CreatorOnly]
    default: Open


  - name: state_management_local_provider_directory
    configName: Directory
    label: State Management Local Provider Directory
    description: The directory to store components' state in.
    required: true
    configurableInWizard: true
    type: path
    pathType: localDataDir
    mode: '0750'
    conformRegex: /.*
    default: /data/nifi/state/local
  - {configName: Always Sync, default: 'false', description: 'Always Sync - If set
      to true, any change to the repository will be synchronized to the disk, meaning
      that NiFi will ask the operating system not to cache the information. This is
      very expensive and can significantly reduce NiFi performance. However, if it
      is false, there could be the potential for data loss if either there is a sudden
      power loss or the operating system crashes. The default value is false.', label: State
      Management Local Provider Always Sync, name: state_management_local_provider_always_sync,
    required: true, type: boolean}
  - {configName: Partitions, default: 16, description: The number of partitions.,
    label: State Management Local Provider Number of Partitions, min: 1, name: state_management_local_provider_partitions,
    required: true, type: long}
  - {default: 2, description: The amount of time between checkpoints., label: State
      Management Local Provider Checkpoint Interval, min: 1, name: state_management_local_provider_checkpoint_interval,
    required: true, type: long, unit: minutes}

  - name: java_properties
    configName: java.properties
    label: Java properties
    description: Java Properties set using -D
    required: true
    type: string_array
    separator: ' -D'
    default:
    - org.apache.jasper.compiler.disablejsr199=true
    - java.security.egd=file:/dev/urandom
    - sun.net.http.allowRestrictedHeaders=true
    - java.net.preferIPv4Stack=true
    - java.awt.headless=true
    - java.protocol.handler.pkgs=sun.net.www.protocol
  - name: java_non_standard_options
    configName: java.x.options
    label: Java non-standard options
    description: Java Options set using -X
    required: true
    type: string_array
    separator: ' -X'
    default:
    - X:+UseG1GC
  - name: java_heap_size
    configName: java.heap.size
    label: Java Maximum(and Initial) heap size
    description: Java's heap size set using -Xmx and -Xms
    required: true
    type: memory
    unit: megabytes
    scaleFactor: 1.3
    autoConfigShare: 100
    softMin: 512
    default: 512

  - name: ssl_client_truststore_password
    configName: nifi.security.truststorePasswd
    label: Node TLS Certificate Trust Store Password
    description: The password for the Node TLS/SSL Certificate Trust Store File.
    required: true
    type: string
    initType: randomBase64

  - name: ssl_server_keystore_password
    configName: nifi.security.keystorePasswd
    label: Node TLS Server JKS Keystore File Password
    description: The password for the Node JKS keystore file.
    required: true
    type: string
    initType: randomBase64

  - name: ssl_server_keystore_keypassword
    configName: nifi.security.keyPasswd
    label: Node TLS Server JKS Keystore Key Password
    description: The password that protects the private key contained in the
      JKS keystore used when Node is acting as a TLS/SSL server.
    required: true
    type: string
    initType: randomBase64

  configWriter:
    auxConfigGenerators:
    - filename: authorizations-safety-valve.xml
      sourceFilename: aux/authorizations-safety-valve.xml
    - filename: authorizers-access-policy-provider-safety-valve.xml
      sourceFilename: aux/authorizers-access-policy-provider-safety-valve.xml
    - filename: authorizers-authorizer-safety-valve.xml
      sourceFilename: aux/authorizers-authorizer-safety-valve.xml
    - filename: authorizers-user-group-provider-safety-valve.xml
      sourceFilename: aux/authorizers-user-group-provider-safety-valve.xml
    - filename: cmf-tenants-groups-safety-valve.hadoop.xml
      sourceFilename: aux/cmf-tenants-groups-safety-valve.xml
    - filename: jaas.conf
      sourceFilename: aux/jaas.conf
    - filename: login-identity-providers-safety-valve.xml
      sourceFilename: aux/login-identity-providers-safety-valve.xml
    - filename: state-management-safety-valve.xml
      sourceFilename: aux/state-management-safety-valve.xml

    generators:
    - filename: authorizers-access-policy-provider-file.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: identifier, value: file-access-policy-provider}
      - {key: class, value: org.apache.nifi.authorization.FileAccessPolicyProvider}
      - {key: User Group Provider, value: '${authorizers_access_policy_file_user_group_provider}-user-group-provider'}
      - {key: Authorizations File, value: '${nifi_home}/authorizations.xml'}
      - {key: cdh.authorizers.type, value: accessPolicyProvider}

    - filename: authorizers-authorizer-managed.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: identifier, value: managed-authorizer}
      - {key: class, value: org.apache.nifi.authorization.StandardManagedAuthorizer}
      - {key: Access Policy Provider, value: '${authorizers_authorizer_managed_access_policy_provider}'}
      - {key: cdh.authorizers.type, value: authorizer}

    - filename: authorizers-user-group-provider-cloudera.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: identifier, value: cloudera-user-group-provider}
      - {key: class, value: org.apache.nifi.authorization.FileUserGroupProvider}
      - {key: Users File, value: '@@CONF_DIR@@/cmf-tenants.xml'}
      - {key: cdh.authorizers.type, value: userGroupProvider}

    - filename: authorizers-user-group-provider-file.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: identifier, value: file-user-group-provider}
      - {key: class, value: org.apache.nifi.authorization.FileUserGroupProvider}
      - {key: Users File, value: '${nifi_home}/users.xml'}
      - {key: cdh.authorizers.type, value: userGroupProvider}

    - filename: authorizers-user-group-provider-composite-configurable.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - key: identifier
        value: composite-configurable-user-group-provider
      - key: class
        value: org.apache.nifi.authorization.CompositeConfigurableUserGroupProvider
      - key: Configurable User Group Provider
        value: file-user-group-provider
      - key: User Group Provider Cloudera
        value: cloudera-user-group-provider
      - key: cdh.authorizers.type
        value: userGroupProvider

    - filename: bootstrap.conf
      configFormat: properties
      includedParams: []
      additionalConfigs:
      - {key: java, value: '${java_home}/bin/java'}
      #- {key: notification.services.file, value: bootstrap-notification-services.xml}
      #- {key: notification.max.attempts, value: '5'}
      - {key: run.as, value: ''}
      - {key: nifi.bootstrap.sensitive.key, value: ''}

    - filename: login-identity-providers-kerberos.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: identifier, value: kerberos-provider}
      - {key: class, value: org.apache.nifi.kerberos.KerberosProvider}
      - {key: Authentication Expiration, value: '${login_identity_providers_kerberos_authentication_expiration}
          hours'}
      - {key: Default Realm, value: '@@REALM@@'}
      - {key: cdh.login.identity.providers.type, value: provider}

    - filename: nifi.properties
      configFormat: properties

      kerberosPrincipals:
      - principalName: nifi_principal
        propertyName: nifi.kerberos.service.principal
      - principalName: nifi_spnego_principal
        propertyName: nifi.kerberos.spnego.principal

      includedParams: [
        nifi_flow_configuration_archive_enabled, nifi_flow_configuration_archive_max_count,
        nifi_flowcontroller_auto_resume_state, nifi_ui_banner_text,
        nifi_nar_library_directory,

        nifi_database_directory,

        nifi_flowfile_repository_implementation, nifi_flowfile_repository_directory,
        nifi_flowfile_repository_partitions, nifi_flowfile_repository_always_sync,
        nifi_swap_queue_threshold, nifi_swap_in_threads, nifi_swap_out_threads,

        nifi_content_repository_implementation,
        nifi_content_claim_max_flow_files,
        nifi_content_repository_directory,
        nifi_content_repository_archive_enabled,
        nifi_content_repository_always_sync,
        nifi_content_viewer_url,

        nifi_provenance_repository_implementation,
        nifi_provenance_repository_directory,
        nifi_provenance_repository_query_threads,
        nifi_provenance_repository_index_threads,
        nifi_provenance_repository_compress_on_rollover,
        nifi_provenance_repository_always_sync,
        nifi_provenance_repository_journal_count,
        nifi_provenance_repository_indexed_fields,
        nifi_provenance_repository_indexed_attributes,
        nifi_provenance_repository_max_attribute_length,
        nifi_provenance_repository_concurrent_merge_threads,
        nifi_provenance_repository_buffer_size,
        nifi_components_status_repository_buffer_size,

        nifi_remote_input_socket_port, nifi_remote_input_http_enabled,

        nifi_web_http_port, nifi_web_http_port_forwarding, nifi_web_http_network_interface,

        nifi_web_jetty_threads,
        nifi_sensitive_props_key,

        ssl_server_keystore_password,
        #ssl_server_keystore_keypassword,
        ssl_client_truststore_password,

        nifi_security_user_authorizer, nifi_security_user_login_identity_provider,

        nifi_cluster_node_protocol_port, nifi_cluster_node_protocol_threads,
        nifi_cluster_node_protocol_max_threads, nifi_cluster_node_event_history_size,
        nifi_cluster_node_max_concurrent_requests,

        nifi_zookeeper_auth_type
        ]
      additionalConfigs:
      - {key: nifi.flow.configuration.file, value: '${nifi_home}/flow.xml.gz'}
      - {key: nifi.flow.configuration.archive.dir, value: '${nifi_home}/archive'}
      - {key: nifi.flow.configuration.archive.max.time, value: '${nifi_flow_configuration_archive_max_time}
          hours'}
      - {key: nifi.flow.configuration.archive.max.storage, value: '${nifi_flow_configuration_archive_max_storage}
          MB'}
      - {key: nifi.flowcontroller.graceful.shutdown.period, value: '${nifi_flowcontroller_graceful_shutdown_period}
          sec'}
      - {key: nifi.flowservice.writedelay.interval, value: '${nifi_flowservice_writedelay_interval}
          ms'}
      - {key: nifi.administrative.yield.duration, value: '${nifi_administrative_yield_duration}
          sec'}
      - {key: nifi.bored.yield.duration, value: '${nifi_bored_yield_duration} millis'}
      - {key: nifi.authorizer.configuration.file, value: authorizers.xml}
      - {key: nifi.login.identity.provider.configuration.file, value: login-identity-providers.xml}
      - {key: nifi.templates.directory, value: '${nifi_home}/templates'}
      - {key: nifi.ui.autorefresh.interval, value: '${nifi_ui_autorefresh_interval}
          sec'}

      - key: nifi.h2.url.append
        value: ;${nifi_database_h2_url_append}

      - {key: nifi.nar.library.directory, value: '@@CDH_NIFI_HOME@@/lib'}
      - {key: nifi.nar.working.directory, value: '${nifi_home}/work/nar'}
      - {key: nifi.documentation.working.directory, value: '${nifi_home}/work/docs/components'}
      - {key: nifi.state.management.configuration.file, value: ./state-management.xml}
      - {key: nifi.state.management.provider.local, value: local-provider}
      - {key: nifi.state.management.provider.cluster, value: zk-provider}
      - {key: nifi.state.management.embedded.zookeeper.start, value: 'false'}
      - {key: nifi.flowfile.repository.checkpoint.interval, value: '${nifi_flowfile_repository_checkpoint_interval}
          mins'}
      - {key: nifi.swap.manager.implementation, value: org.apache.nifi.controller.FileSystemSwapManager}
      - {key: nifi.swap.in.period, value: '${nifi_swap_in_period} sec'}
      - {key: nifi.swap.out.period, value: '${nifi_swap_out_period} sec'}
      - {key: nifi.content.claim.max.appendable.size, value: '${nifi_content_claim_max_appendable_size}
          MB'}
      - {key: nifi.content.repository.archive.max.retention.period, value: '${nifi_content_repository_archive_max_retention_period}
          hours'}
      - {key: nifi.content.repository.archive.max.usage.percentage, value: '${nifi_content_repository_archive_max_usage_percentage}%'}
      - {key: nifi.components.status.repository.implementation, value: org.apache.nifi.controller.status.history.VolatileComponentStatusRepository}
      - {key: nifi.components.status.snapshot.frequency, value: '${nifi_components_status_snapshot_frequency}
          min'}
      - {key: nifi.provenance.repository.max.storage.time, value: '${nifi_provenance_repository_max_storage_time}
          hours'}
      - {key: nifi.provenance.repository.max.storage.size, value: '${nifi_provenance_repository_max_storage_size}
          GB'}
      - {key: nifi.provenance.repository.rollover.time, value: '${nifi_provenance_repository_rollover_time}
          secs'}
      - {key: nifi.provenance.repository.rollover.size, value: '${nifi_provenance_repository_rollover_size}
          MB'}
      - {key: nifi.provenance.repository.index.shard.size, value: '${nifi_provenance_repository_index_shard_size}
          MB'}
      - {key: nifi.provenance.repository.warm.cache.frequency, value: '${nifi_provenance_repository_warm_cache_frequency}
          hours'}

      - key: nifi.remote.input.host
        value: ${host}
      - key: nifi.remote.input.secure
        value: '@@NIFI_TLS_ENABLED@@'
      - key: nifi.remote.input.http.transaction.ttl
        value: ${nifi_remote_input_http_transaction_ttl} sec

      - key: nifi.web.http.host
        value: ${host}
      - key: nifi.web.war.directory
        value: '@@CDH_NIFI_HOME@@/lib'
      - key: nifi.web.jetty.working.directory
        value: '${nifi_home}/work/jetty'

      - {key: nifi.sensitive.props.algorithm, value: PBEWITHMD5AND256BITAES-CBC-OPENSSL}
      - {key: nifi.sensitive.props.provider, value: BC}
      - key: nifi.security.ssl.enabled
        value: '@@NIFI_TLS_ENABLED@@'
      - key: nifi.security.keystoreType
        value: JKS
      - key: nifi.security.keystore
        value: '@@CONF_DIR@@/keystore.jks'
      - key: nifi.security.keyPasswd
        value: '${ssl_server_keystore_password}'
      - key: nifi.security.truststoreType
        value: JKS
      - key: nifi.security.truststore
        value: '@@CONF_DIR@@/truststore.jks'
      - key: nifi.security.needClientAuth
        value: '@@NIFI_TLS_ENABLED@@'

      - key: nifi.cluster.node.address
        value: ${host}
      - key: nifi.cluster.protocol.heartbeat.interval
        value: ${nifi_cluster_protocol_heartbeat_interval} sec
      - key: nifi.cluster.protocol.is.secure
        value: '@@NIFI_TLS_ENABLED@@'

      - key: nifi.cluster.is.node
        value: true
      - key: nifi.cluster.node.connection.timeout
        value: '${nifi_cluster_node_connection_timeout} sec'
      - key: nifi.cluster.node.read.timeout
        value: '${nifi_cluster_node_read_timeout} sec'
      - key: nifi.cluster.flow.election.max.wait.time
        value: '${nifi_cluster_flow_election_max_wait_time} sec'
      - key: nifi.cluster.flow.election.max.candidates
        value: '@@NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES@@'

      - key: nifi.zookeeper.connect.string
        value: '@@ZK_QUORUM@@'
      - key: nifi.zookeeper.root.node
        value: '@@ZK_ROOT@@'
      - key: nifi.zookeeper.connect.timeout
        value: '${nifi_zookeeper_connect_timeout} secs'
      - key: nifi.zookeeper.session.timeout
        value: '${nifi_zookeeper_session_timeout} secs'
      - key: nifi.zookeeper.kerberos.removeHostFromPrincipal
        value: true
      - key: nifi.zookeeper.kerberos.removeRealmFromPrincipal
        value: true

      - key: nifi.kerberos.service.keytab.location
        value: nifi.keytab
      - key: nifi.kerberos.spnego.keytab.location
        value: nifi.keytab
      - key: nifi.kerberos.spnego.authentication.expiration
        value: '${login_identity_providers_kerberos_authentication_expiration} hours'

      - key: nifi.variable.registry.properties
        value: nifi-variable-registry.properties

    - filename: state-management-local-provider.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: id, value: local-provider}
      - {key: class, value: org.apache.nifi.controller.state.providers.local.WriteAheadLocalStateProvider}
      - {key: Checkpoint Interval, value: '${state_management_local_provider_checkpoint_interval}
          mins'}
      - {key: Directory, value: '${state_management_local_provider_directory}'}
      - {key: Always Sync, value: '${state_management_local_provider_always_sync}'}
      - {key: Partitions, value: '${state_management_local_provider_partitions}'}
      - {key: cdh.stateManagement.provider.type, value: local-provider}

    - filename: state-management-zk-provider.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: id, value: zk-provider}
      - {key: class, value: org.apache.nifi.controller.state.providers.zookeeper.ZooKeeperStateProvider}
      - {key: Connect String, value: '@@ZK_QUORUM@@' }
      - {key: Root Node, value: '@@ZK_ROOT@@'}
      - {key: Session Timeout, value: '${nifi_zookeeper_session_timeout} seconds'}
      - {key: Access Control, value: '${state_management_zk_provider_access_control}'}
      - {key: cdh.stateManagement.provider.type, value: cluster-provider}

    - filename: tls-conf/tls-client.hadoop_xml
      configFormat: hadoop_xml
      includedParams: []
      additionalConfigs:
      - {key: keyStore, value: 'keystore.jks'}
      - {key: keyStorePassword, value: '${ssl_server_keystore_password}'}
      - {key: keyPassword, value: '${ssl_server_keystore_password}'}
      - {key: trustStore, value: 'truststore.jks'}
      - {key: trustStorePassword, value: '${ssl_client_truststore_password}'}

    - filename: nifi-reset.properties
      configFormat: properties
      includedParams: []
      additionalConfigs:
      - key: zk-canary
        value: '
          export CLIENT_JVMFLAGS=-Djava.security.auth.login.config=jaas.conf;
          export PRINCIPAL=$(cut -d/ -f 1 <<< $nifi_principal);
          export ZK_ROOT=/$PRINCIPAL;
          zookeeper-client -server $ZK_QUORUM create $ZK_ROOT/canary hello sasl:$PRINCIPAL:cdrwa;
          zookeeper-client -server $ZK_QUORUM getAcl $ZK_ROOT/canary;
          zookeeper-client -server $ZK_QUORUM get $ZK_ROOT/canary;
          zookeeper-client -server $ZK_QUORUM delete $ZK_ROOT/canary;
         '
      - key: state
        value: '
          IFS=: read -ra array <<< ${nifi_provenance_repository_directory}:${nifi_content_repository_directory};
          for i in $array; do rm -rf $i/*; done;
          rm -rf
            ${nifi_home}/archive
            ${nifi_home}/work
            ${nifi_home}/authorizations.xml
            ${nifi_home}/flow.xml.gz
            ${nifi_home}/users.xml
            ${nifi_flowfile_repository_directory}/*
            ${nifi_database_directory}/*
            ${state_management_local_provider_directory}/*
          '
      - key: zookeeper
        value: '
          CLIENT_JVMFLAGS=-Djava.security.auth.login.config=jaas.conf
          zookeeper-client -server $ZK_QUORUM rmr /$(cut -d/ -f 1 <<< $nifi_principal)
          '

    - filename: nifi-variable-registry.properties
      configFormat: properties
      includedParams: []

    peerConfigGenerators:
    - roleName: NIFI_SERVER
      filename: nifi-nodes.properties
      params: [nifi_cluster_node_protocol_port]
